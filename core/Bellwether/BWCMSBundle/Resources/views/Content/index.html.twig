{% extends "BWCMSBundle:Common:default.html.twig" %}

{% block title %} {{ title }} {% endblock %}
{% block pageTitle %}
    <h1>{{ title }}</h1>
{% endblock %}

{% block header %}
    <link rel="stylesheet" href="{{ asset('bundles/bwcms/js/dropzone/dropzone.min.css') }}"/>
    <link rel="stylesheet" href="{{ asset('bundles/bwcms/js/datatable/css/jquery.dataTables.min.css') }}"/>
    <link rel="stylesheet" href="{{ asset('bundles/bwcms/js/jstree/themes/default/style.min.css') }}"/>
    <link rel="stylesheet" href="{{ asset('bundles/bwcms/js/lightbox/ekko-lightbox.min.css') }}"/>
{% endblock %}

{% block body %}
    <script language="JavaScript">
        $(document).ready(function () {
            var h = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
            if ((h - 200) > 400) {
                $('div.contentPageLeft').height(h - 200);
                $('div.contentPageRight').height(h - 200);
            }
        });
        $(window).resize(function () {
            var h = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
            if ((h - 200) > 400) {
                $('div.contentPageLeft').height(h - 200);
                $('div.contentPageRight').height(h - 200);
            }
        })
    </script>
    <style>
        #contentTable_wrapper{
            padding-bottom: 100px;;
        }

    </style>
    <div class="row">
        <div class="col-md-3">
            <div id="jstree_div" class="contentPageLeft"></div>
        </div>
        <div class="col-md-9 contentPageRight">
            <div id="contentToolBarHolder" style="display: none;">
                &nbsp;&nbsp;
                <div id="contentToolBar" class="btn-group">
                    <button type="button" id="tbselectNone" class="btn btn-default"><span
                                class="fa fa-square-o"></span></button>
                    <button type="button" id="tbselectAll" class="btn btn-default"><span
                                class="fa fa-check-square"></span></button>
                    <button type="button" id="tbCutButton" disabled="true" class="btn btn-default"><span
                                class="fa fa-scissors"></span></button>
                    <button type="button" id="tbCopyButton" disabled="true" class="btn btn-default"><span
                                class="fa fa-files-o"></span></button>
                    <button type="button" id="tbPasteButton" disabled="true" class="btn btn-default"><span
                                class="fa fa-clipboard"></span></button>
                    <button type="button" id="tbDeleteButton" disabled="true" class="btn btn-default"><span
                                class="fa fa-times"></span></button>
                </div>
            </div>
            <input type="hidden" id="selectedContentFolderId" value="{{ parentId }}">
            <input type="hidden" id="toolbarCommand" value="">
            <input type="hidden" id="sourceFolderId" value="">
            <input type="hidden" id="selectedIds" value="">
            <table id="contentTable"  class="table" border="0" width="100%">
                <thead>
                <tr>
                    <th width="32"></th>
                    <th width="32">Icon</th>
                    <th>Title</th>
                    <th width="10">Type</th>
                    <th width="10">Status</th>
                    <th width="100">Date</th>
                    <th width="200">Action</th>
                </tr>
                </thead>
            </table>
        </div>
    </div>

    {% if mediaContentTypes %}
        <!-- Modal -->
        <div class="modal fade bs-example-modal-lg" id="uploadModel" tabindex="-1" data-backdrop="static"
             data-keyboard="false" role="dialog"
             aria-labelledby="uploadModelLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" id="uploadModelCloseButton" class="close"><span
                                    aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="uploadModelLabel">
                            Upload File
                            <span class="btn btn-success fileinput-button dz-clickable"><i
                                        class="glyphicon glyphicon-plus"></i><span>Add files...</span></span>
                        </h4>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" id="uploadContentParentId" value="">
                        <input type="hidden" id="uploadContentType" value="">
                        <input type="hidden" id="uploadContentSchema" value="">

                        <div id="fileUploaderPreviews">
                        </div>
                        <div style="display: none;" id="fileUploaderTemplate">
                            <table border="1" width="100%" cellpadding="5">
                                <tr>
                                    <td width="100"><img data-dz-thumbnail/></td>
                                    <td align="left">
                                        <h5 class="name" data-dz-name></h5>
                                        Size: <span class="size" data-dz-size></span>

                                        <div class="progress progress-striped active" role="progressbar"
                                             aria-valuemin="0"
                                             aria-valuemax="100" aria-valuenow="0">
                                            <div class="progress-bar progress-bar-success" style="width:0%;"
                                                 data-dz-uploadprogress></div>
                                        </div>
                                        <strong class="error text-danger" data-dz-errormessage></strong>
                                    </td>
                                    <td align="center">
                                        <button data-dz-remove class="btn btn-warning cancel">
                                            <i class="glyphicon glyphicon-ban-circle"></i>
                                        </button>
                                        <button data-dz-remove class="btn btn-danger delete">
                                            <i class="glyphicon glyphicon-trash"></i>
                                        </button>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    {% endif %}

    <script language="JavaScript">
        var createURL = '{{ url('_bwcms_admin_content_create') }}';
        var sortStartPosition, sortEndPosition = 0;
        var ajaxRequestActive = false;
        var contentTable = null;
        function resetToolBar() {
            $("#contentTable input:checked").prop('checked', false);
            $("#contentTable tr.selected").removeClass('selected');
            $("#contentTable tr.actioned").removeClass('actioned');
            $('#tbCutButton').prop('disabled', true);
            $('#tbCopyButton').prop('disabled', true);
            $('#tbPasteButton').prop('disabled', true);
            $('#tbDeleteButton').prop('disabled', true);
            $('#selectedIds').val('');
            $('#sourceFolderId').val('');
            $('#toolbarCommand').val('');
        }
        function updateToolbar() {
            var selCount = $("#contentTable input:checked").length;
            if (selCount > 0) {
                $('#tbCutButton').prop('disabled', false);
                $('#tbCopyButton').prop('disabled', false);
                $('#tbDeleteButton').prop('disabled', false);
            } else {
                $('#tbCutButton').prop('disabled', true);
                $('#tbCopyButton').prop('disabled', true);
                $('#tbDeleteButton').prop('disabled', true);
            }
        }
        function doToolbarOperation() {
            $("#contentTable tr.actioned").each(function () {
                $(this).removeClass('actioned');
            });
            var selectedIds = [];
            $("#contentTable tr.selected").each(function () {
                $(this).addClass('actioned');
                selectedIds.push($(this).prop('id'));
            });
            $('#selectedIds').val('');
            $('#sourceFolderId').val('');
            $('#tbPasteButton').prop('disabled', true);
            var command = $('#toolbarCommand').val();
            if (selectedIds.length > 0) {
                $('#selectedIds').val(selectedIds.join(','));
                $('#sourceFolderId').val($("#selectedContentFolderId").val());
                if (command == 'cut' || command == 'copy') {
                    $('#tbPasteButton').prop('disabled', false);
                }
            }
        }
        function doPasteOperation() {
            var contentIds = $('#selectedIds').val();
            var currentFolderId = $("#selectedContentFolderId").val();
            var sourceFolderId = $("#sourceFolderId").val();
            var command = $('#toolbarCommand').val();
            if (command == 'cut' && currentFolderId == sourceFolderId) {
                $.notify({message: 'You cannot paste the items in to the same folder'}, {type: 'info', delay: 5.0});
                resetToolBar();
                return;
            }
            if (command == 'cut' && contentIds.search(currentFolderId) != -1) {
                $.notify({message: 'You cannot paste the selected item into itself!'}, {type: 'info', delay: 5.0});
                resetToolBar();
                return;
            }
            var request = $.ajax({
                method: "POST",
                url: "{{ url('_bwcms_admin_content_paste') }}",
                data: {
                    contentIds: contentIds,
                    targetId: currentFolderId,
                    command: command,
                    type: '{{ type }}',
                    sourceFolderId: sourceFolderId
                },
                beforeSend: function () {
                    ajaxRequestActive = true;
                },
                error: function (xhr, ajaxOptions, errorThrown) {
                    ajaxRequestActive = false;
                    $.notify({message: xhr.responseText}, {type: 'danger', delay: 5.0});
                },
                success: function (data) {
                    $('#jstree_div').jstree(true).settings.core.data = data.nodes;
                    $('#jstree_div').jstree(true).refresh();
                    resetToolBar();
                },
                complete: function (data) {
                    ajaxRequestActive = false;
                }
            });
        }
        function doDeleteOperation() {
            var selectedIds = [];
            var currentFolderId = $("#selectedContentFolderId").val();
            $("#contentTable tr.selected").each(function () {
                selectedIds.push($(this).prop('id'));
            });
            if (selectedIds.length == 0) {
                return false;
            }
            if (!confirm("Do you want to delete selected and it's sub items? Please confirm?")) {
                return;
            }
            var contentIds = selectedIds.join(',');
            var request = $.ajax({
                method: "POST",
                url: "{{ url('_bwcms_admin_content_delete') }}",
                data: {
                    contentIds: contentIds,
                    targetId: currentFolderId,
                    type: '{{ type }}'
                },
                beforeSend: function () {
                    ajaxRequestActive = true;
                },
                error: function (xhr, ajaxOptions, errorThrown) {
                    ajaxRequestActive = false;
                    $.notify({message: xhr.responseText}, {type: 'danger', delay: 5.0});
                },
                success: function (data) {
                    $('#jstree_div').jstree(true).settings.core.data = data.nodes;
                    $('#jstree_div').jstree(true).refresh();
                    resetToolBar();
                },
                complete: function (data) {
                    ajaxRequestActive = false;
                }
            });

        }
        $(document).ready(function () {
            contentTable = $('#contentTable').DataTable({
                ordering: false,
                processing: true,
                serverSide: true,
                pageLength: 10,
                drag: true,
                select: true,
                ajax: {
                    url: "{{ url('_bwcms_admin_content_table_data') }}",
                    type: 'GET',
                    'data': function (params) {
                        params.type = '{{ type }}';
                        params.parent = $("#selectedContentFolderId").val();
                        return params;
                    },
                    complete: function (e, d) {
                        updateToolbar();
                    }
                },
                columns: [
                    {
                        data: null,
                        className: "center",
                        render: function (data, type, full, meta) {
                            return '<input type="checkbox" class="cselector">';
                        }
                    },
                    {data: "thumbnail"},
                    {data: "title"},
                    {data: "type"},
                    {data: "status"},
                    {data: "createdDate"},
                    {
                        data: null,
                        className: "center",
                        render: function (data, type, full, meta) {
                            var ret = '<button type="button" class="btn btn-primary edit"><i class="glyphicon glyphicon-pencil"></i></button>';
                            if (data.pbLink.length > 0) {
                                ret = ret + ' <button type="button" class="btn btn-primary pageBuilder" data-url="' + data.pbLink + '"><i class="glyphicon glyphicon-list-alt"></i></button>';
                            }
                            if (data.download.length > 0) {
                                ret = ret + ' <button type="button" class="btn btn-primary download" data-url="' + data.download + '"><i class="glyphicon glyphicon-download-alt"></i></button>';
                            }
                            if (data.link.length > 0) {
                                ret = ret + ' <button type="button" class="btn btn-primary preview" data-url="' + data.link + '"><i class="glyphicon glyphicon-globe"></i></button>';
                            }
                            return ret;
                        }
                    }
                ],
                fnDrawCallback: function (oSettings) {
                    $('#contentTable button.edit').click(function (e) {
                        var editURL = '{{ url('_bwcms_admin_content_edit') }}';
                        var contentId = $(this).parents('tr').attr('id');
                        window.location = editURL + '?contentId=' + contentId;
                        e.preventDefault();
                        return false;
                    });
                    $('#contentTable a.lightBox').click(function (e) {
                        e.preventDefault();
                        $(this).ekkoLightbox();
                    });
                    $('#contentTable button.pageBuilder').click(function (e) {
                        e.preventDefault();
                        window.location = $(this).data('url');
                    });
                    $('#contentTable button.download').click(function (e) {
                        e.preventDefault();
                        window.location = $(this).data('url');
                    });
                    $('#contentTable button.preview').click(function (e) {
                        e.preventDefault();
                        window.open($(this).data('url'));
                    });
                    $('#contentTable button.remove').click(function (e) {
                        var contentId = $(this).parents('tr').attr('id');
                        bootbox.confirm("Do you want to delete the selected item?", function (result) {
                            var request = $.post("{{ url('_bwcms_admin_content_delete') }}", {
                                contentId: contentId
                            });
                            request.done(function (data) {
                                contentTable.ajax.reload(null, false);
                            });
                            request.fail(function () {
                                $.notify({message: 'Unable to delete media'}, {type: 'danger', delay: 5.0});
                            });
                        });
                    });
                }
            });
            var toolbarHTML = $('#contentToolBarHolder').html();
            $('#contentToolBarHolder').remove();
            $('#contentTable_length').append(toolbarHTML);
            $('#contentTable tbody').on('click', 'tr', function () {
                var checkbox = $(this).find('.cselector').first();
                if ($(this).hasClass('selected')) {
                    $(this).removeClass('selected');
                    checkbox.prop("checked", false);
                } else {
                    $(this).addClass('selected');
                    checkbox.prop("checked", true);
                }
                updateToolbar();
            });
            $('#tbselectNone').click(function () {
                $('#contentTable tbody tr').each(function () {
                    var checkbox = $(this).find('.cselector').first();
                    checkbox.prop("checked", false);
                    $(this).removeClass('actioned');
                    $(this).removeClass('selected');
                    resetToolBar();
                });
            });
            $('#tbselectAll').click(function () {
                $('#contentTable tbody tr').each(function () {
                    var checkbox = $(this).find('.cselector').first();
                    checkbox.prop("checked", true);
                    $(this).addClass('selected');
                    updateToolbar();
                });
            });
            $('#tbCutButton').click(function () {
                $('#toolbarCommand').val('cut');
                doToolbarOperation();
            });
            $('#tbCopyButton').click(function () {
                $('#toolbarCommand').val('copy');
                doToolbarOperation();
            });
            $('#tbDeleteButton').click(function () {
                $('#toolbarCommand').val('delete');
                doDeleteOperation();
            });
            $('#tbPasteButton').click(function () {
                doPasteOperation();
            });
            $('#contentTable').on('draw.dt', function (e, settings) {
                var parent = $("#selectedContentFolderId").val();
                var treeNode = $("#jstree_div").jstree(true).get_node(parent);
                if (  (typeof treeNode.original !== 'undefined') && treeNode.original.sort==1) {
                    $('#contentTable_info').hide();
                    $('#contentTable_paginate').hide();
                    $("#contentTable tbody").sortable({
                        start: function (event, ui) {
                            sortStartPosition = ui.item.prevAll().length;
                        },
                        update: function (event, ui) {
                            if (ajaxRequestActive) {
                                $("#contentTable tbody").sortable("cancel");
                                return;
                            }
                            sortEndPosition = ui.item.prevAll().length;
                            var contentId = ui.item.first().attr('id');
                            var request = $.ajax({
                                method: "POST",
                                url: "{{ url('_bwcms_admin_content_sort') }}",
                                data: {start: sortStartPosition, end: sortEndPosition, contentId: contentId},
                                beforeSend: function () {
                                    ajaxRequestActive = true;
                                },
                                error: function (xhr, ajaxOptions, errorThrown) {
                                    ajaxRequestActive = false;
                                    $("#contentTable tbody").sortable("cancel");
                                    $.notify({message: xhr.responseText}, {type: 'danger', delay: 5.0});
                                },
                                complete: function () {
                                    ajaxRequestActive = false;
                                }
                            });
                        }
                    });
                }else{
                    $('#contentTable_info').show();
                    $('#contentTable_paginate').show();
                    try {
                        $("#contentTable tbody").sortable('destroy');
                    } catch (err) {
                    }
                }

            });
            {% if mediaContentTypes %}
            var previewNode = document.querySelector("#fileUploaderTemplate");
            var previewTemplate = previewNode.innerHTML;
            $('#fileUploaderTemplate').remove();
            var myDropZone = new Dropzone('div#uploadModel', {
                url: "{{ url('_bwcms_admin_content_media_upload') }}",
                thumbnailWidth: 100,
                thumbnailHeight: 100,
                parallelUploads: 3,
                previewTemplate: previewTemplate,
                autoQueue: true,
                previewsContainer: "#fileUploaderPreviews",
                clickable: ".fileinput-button"
            });
            myDropZone.on("success", function (file) {
                setTimeout(function () {
                    myDropZone.removeFile(file);
                }, 1500);
            });
            myDropZone.on("sending", function (file, xhr, formData) {
                formData.append('parent', $("#uploadContentParentId").val());
                formData.append('type', $("#uploadContentType").val());
                formData.append('schema', $("#uploadContentSchema").val());
            });
            myDropZone.on("queuecomplete", function (progress) {
                contentTable.ajax.reload();
            });
            $('#uploadModelCloseButton').click(function () {
                if (myDropZone.getUploadingFiles().length === 0 && myDropZone.getQueuedFiles().length === 0) {
                    $('#uploadModel').modal('hide');
                }
            });
            {% endif %}
            $('#jstree_div').jstree({
                'core': {
                    'data': {{ jsNodes|raw }},
                    'multiple': false,
                    'check_callback': function (operation, node, node_parent, node_position, more) {
                        if (ajaxRequestActive) {
                            return false;
                        }
                        if (operation === "move_node") {
                            if (node_parent.id == '#' || node.parent == node_parent.id) {
                                return false;
                            }
                            if (typeof more.core === 'undefined') {
                                return true;
                            }
                            var request = $.ajax({
                                method: "POST",
                                url: "{{ url('_bwcms_admin_content_folder_move') }}",
                                data: {contentId: node.id, targetId: node_parent.id},
                                beforeSend: function () {
                                    ajaxRequestActive = true;
                                },
                                error: function (xhr, ajaxOptions, errorThrown) {
                                    ajaxRequestActive = false;
                                    $.notify({message: xhr.responseText}, {type: 'danger', delay: 5.0});
                                },
                                success: function (data) {
                                    if ($("#selectedContentFolderId").val() == node_parent.id) {
                                        contentTable.ajax.reload(null, false);
                                    }
                                },
                                complete: function () {
                                    ajaxRequestActive = false;
                                }
                            });
                        }
                        return true;  //allow all other operations
                    }

                },
                'contextmenu': {
                    'items': function (node, treeObj) {
                        return {

                            "Create": {
                                "separator_before": false,
                                "separator_after": false,
                                "label": "Create",
                                "icon": "glyphicon glyphicon-file",
                                "submenu": {
                                    {% for typeKey,type in contentTypes %}
                                    "{{ typeKey }}": {
                                        "label": "{{ type.name }}",
                                        "icon": "glyphicon glyphicon-plus",
                                        "_disabled": function () {
                                            var isRootItem = {{ type.isRootItem ? 'true' : 'false' }};
                                            if (node.parent == '#' && !isRootItem) {
                                                return true;
                                            }
                                            return false;
                                        },
                                        "action": function () {
                                            window.location = createURL + '?parent=' + node.id + '&type={{ type.type }}&schema={{ type.schema }}&scope={{ scope }}';
                                            return false;
                                        }
                                    },
                                    {% endfor %}
                                }
                            }
                            {% if mediaContentTypes %}
                            , "Upload": {
                                "separator_before": false,
                                "separator_after": false,
                                "label": "Upload",
                                "icon": "glyphicon glyphicon-file",
                                "submenu": {
                                    {% for typeKey,type in mediaContentTypes %}
                                    "{{ typeKey }}": {
                                        "label": "{{ type.name }}",
                                        "icon": "glyphicon glyphicon-plus",
                                        "_disabled": function () {
                                            var isRootItem = {{ type.isRootItem ? 'true' : 'false' }};
                                            if (node.parent == '#' && !isRootItem) {
                                                return true;
                                            }
                                            return false;
                                        },
                                        "action": function () {
                                            $("#uploadContentParentId").val(node.id);
                                            $("#uploadContentType").val('{{ type.type }}');
                                            $("#uploadContentSchema").val('{{ type.schema }}');
                                            $('#uploadModel').modal('show');
                                            return false;
                                        }
                                    },
                                    {% endfor %}
                                }
                            }
                            {% endif %}
                        }
                    }
                },
                'plugins': ['contextmenu', 'dnd']
            });
            $('#jstree_div').on('select_node.jstree', function (node, selected, event) {
                $("#selectedContentFolderId").val(selected.node.id);
                contentTable.ajax.reload();
            });
        });
    </script>
{% endblock %}

{% block footer %}
    <script src="{{ asset('bundles/bwcms/js/dropzone/dropzone.min.js') }}"></script>
    <script src="{{ asset('bundles/bwcms/js/datatable/js/jquery.dataTables.min.js') }}"></script>
    <script src="{{ asset('bundles/bwcms/js/jstree/jstree.min.js') }}"></script>
    <script src="{{ asset('bundles/bwcms/js/lightbox/ekko-lightbox.min.js') }}"></script>
{% endblock %}
